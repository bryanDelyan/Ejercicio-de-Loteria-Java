#BlueJ class context
comment0.target=Consola
comment0.text=\r\n\ <p>\r\n\ La\ clase\ Consola\ encapsula\ y\ facilita\ el\ uso\ de\ las\ instrucciones\ de\ entrada/salida\ del\ computador.\r\n\ </p>\r\n\ <p>\r\n\ Todo\ computador\ tiene\ una\ entrada\ y\ salida\ est&aacute;ndar\:\ la\ entrada\ est&aacute;ndar\ es\ el\ teclado\ y\ \r\n\ la\ salida\ est&aacute;ndar\ es\ la\ pantalla.\r\n\ La\ entrada\ y\ la\ salida\ est&aacute;ndar\ constituyen\ el\ mecanismo\ b&aacute;sico\ de\ comunicaci&oacute;n\ entre\r\n\ la\ m&aacute;quina\ y\ el\ usuario\ final,\ lo\ que\ se\ conoce\ como\ la\ interfaz\ humano-m&aacute;quina.\r\n\ </p>\r\n\ <p>\r\n\ La\ interfaz\ puede\ ser,\ entre\ muchos\ otros\ tipos\:<br/>\r\n\ <ul>\r\n\ <li>S&oacute;lo\ texto,\ sencilla,\ usando\ caracteres\ est&aacute;ndar</li>\r\n\ <li>S&oacute;lo\ texto,\ b&aacute;sica,\ usando\ caracteres\ especiales\ como\ recuadros\ &\#172;\ &\#746;\ &\#741;\ </li>\r\n\ <li>Gr&aacute;fica\ usando\ elementos\ tipo\ ventanas\ (windows),etiquetas(label),botones(button),cuadros\ de\ texto(textfield),etc.</li>\r\n\ <li>Web,\ caso\ en\ el\ cual\ se\ usan\ otros\ lenguajes\ de\ marca\ como\ HTML,\ XML\ y\ de\ formato\ como\ CSS</li>\r\n\ <li>M&oacute;vil,\ por\ la\ tendencia\ de\ micro\ dispositivos</li>\r\n\ <li>Biom&eacute;trica,\ cuando\ se\ usa\ voz,\ imagen,\ huella\ digital.\ Requiere\ hardware\ especializado</li>\r\n\ </ul>\r\n\ </p>\r\n\ <p>\r\n\ La\ clase\ Consola\ ofrece\ una\ interfaz\ sencilla,\ s&oacute;lo\ texto\ plano.\ Lo\ que\ se\ conoce\ t&iacute;picamente\ \r\n\ en\ ingles\ como\ shell.\ Se\ ofrecen\ m&eacute;todos\ para\ leer\ e\ imprimnir\ datos\ de\ todos\ los\ tipos\ b&aacute;sicos\ de\ Java.\r\n\ </p>\r\n\ @author\ (Milton\ Jes&uacute;s\ Vera\ Contreras\ -\ miltonjesusvc@ufps.edu.co)\ \r\n\ @version\ 0.0000000000000003\ -->\ 3*Math.sin(Math.PI-Double.MIN_VALUE)\ -->\ \:)\r\n
comment1.params=
comment1.target=Consola()
comment1.text=\r\n\ Default\ constructor\r\n
comment10.params=
comment10.target=int\ leerEntero()
comment10.text=\r\n\ Lee\ un\ entero\ en\ el\ rango\ de\ los\ int\ (-2147483648\ a\ 2147483647).\r\n\ @return\ un\ int\r\n
comment11.params=aviso
comment11.target=int\ leerEntero(java.lang.String)
comment11.text=\r\n\ Sobrecarga\ leerEntero\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ int\r\n
comment12.params=
comment12.target=long\ leerLong()
comment12.text=\r\n\ Lee\ un\ entero\ en\ el\ rango\ de\ los\ long\ (-9223372036854775808\ a\ 9223372036854775807).\r\n\ @return\ un\ long\r\n
comment13.params=aviso
comment13.target=long\ leerLong(java.lang.String)
comment13.text=\r\n\ Sobrecarga\ leerLong\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ long\r\n
comment14.params=
comment14.target=float\ leerFloat()
comment14.text=\r\n\ Lee\ un\ real\ en\ el\ rango\ de\ los\ float\ (1.4E-45\ a\ 3.4028235E38).\r\n\ @return\ un\ float\r\n
comment15.params=aviso
comment15.target=float\ leerFloat(java.lang.String)
comment15.text=\r\n\ Sobrecarga\ leerFloat\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ float\r\n
comment16.params=
comment16.target=double\ leerDouble()
comment16.text=\r\n\ Lee\ un\ real\ en\ el\ rango\ de\ los\ double\ (4.9E-324\ a\ \ 1.7976931348623157E308).\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ double\r\n
comment17.params=aviso
comment17.target=double\ leerDouble(java.lang.String)
comment17.text=\r\n\ Sobrecarga\ leerDouble\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ double\r\n
comment18.params=
comment18.target=char\ leerCaracter()
comment18.text=\r\n\ Lee\ un\ s\u00F3lo\ caracter\ char.\ Cualquier\ caracter\ UNICODE\ (0\ -65536)\ Omite\ las\ teclas\:\r\n\ <ul>\r\n\ <li>Tecla\ ENTER\:\ ASCII/UNICODE\ 10\ CR\ (Carriage\ Return)\ \=\ 10\ y\ ASCII/UNICODE\ 13\ LF\ (Line\ Feed).\ Ver\ <a\ href\="https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s">https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s</a></li>\r\n\ <li>Tecla\ SPACE\ (barra\ espaciadora)\:\ ASCII/UNICODE\ 32</li>\r\n\ <li>Tecla\ TAB\ (tabulador)\:\ ASCII/UNICODE\ 9</li>\r\n\ <li>Teclas\ ESC\ (escape)\:\ ASCII/UNICODE\ 27</li>\r\n\ </ul>\r\n\ @view\ http\://www.unicode.org\r\n\ @link\ http\://www.unicode.org\r\n\ @return\ un\ char\r\n
comment19.params=aviso
comment19.target=char\ leerCaracter(java.lang.String)
comment19.text=\r\n\ Sobrecarga\ leerCaracter\ para\ imprimir\ una\ aviso.\r\n\ Omite\ las\ teclas\:\r\n\ <ul>\r\n\ <li>Tecla\ ENTER\:\ ASCII/UNICODE\ 10\ CR\ (Carriage\ Return)\ \=\ 10\ y\ ASCII/UNICODE\ 13\ LF\ (Line\ Feed).\ Ver\ <a\ href\="https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s">https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s</a></li>\r\n\ <li>Tecla\ SPACE\ (barra\ espaciadora)\:\ ASCII/UNICODE\ 32</li>\r\n\ <li>Tecla\ TAB\ (tabulador)\:\ ASCII/UNICODE\ 9</li>\r\n\ <li>Teclas\ ESC\ (escape)\:\ ASCII/UNICODE\ 27</li>\r\n\ </ul>\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @view\ http\://www.unicode.org\r\n\ @link\ http\://www.unicode.org\r\n\ @return\ un\ char\r\n
comment2.params=
comment2.target=java.lang.String\ leerCadena()
comment2.text=\r\n\ Lee\ una\ cadena\ de\ caracteres\ usando\ separdores\ est&aacute;ndar.\ Cualquier\ cantidad\ de\ caracteres\ UNICODE.\r\n\ Usa\ como\ separadores\ los\ caracteres\ est&aacute;ndar\:\ \r\n\ <ul>\r\n\ <li>Tecla\ ENTER\:\ ASCII/UNICODE\ 10\ CR\ (Carriage\ Return)\ \=\ 10\ y\ ASCII/UNICODE\ 13\ LF\ (Line\ Feed).\ Ver\ <a\ href\="https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s">https\://danielmiessler.com/study/crlf/\#gs.oVKPY7s</a></li>\r\n\ <li>Tecla\ SPACE\ (barra\ espaciadora)\:\ ASCII/UNICODE\ 32</li>\r\n\ <li>Tecla\ TAB\ (tabulador)\:\ ASCII/UNICODE\ 9</li>\r\n\ <li>Teclas\ ESC\ (escape)\:\ ASCII/UNICODE\ 27</li>\r\n\ </ul>\r\n\ @param\ \ *\ NO\ recibe\ parametros.\ Si\ desea\ imprimir\ un\ mensaje\ al\ usuario\ use\ el\ m&eacute;todo\ imprimir\ o\ el\ m&eacute;todo\ sobrecargado.\r\n\ @return\ un\ String\r\n
comment20.params=
comment20.target=boolean\ leerBoolean()
comment20.text=\r\n\ Lee\ un\ valor\ l\u00F3gico\:\ true\ |\ false\r\n\ @return\ un\ boolean\r\n
comment21.params=aviso
comment21.target=boolean\ leerBoolean(java.lang.String)
comment21.text=\r\n\ Sobrecarga\ leerBoolean\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ boolean\r\n
comment22.params=opciones\ aviso
comment22.target=int\ menu(java.lang.String[],\ java.lang.String)
comment22.text=\r\n\ Muestra\ un\ men\u00FA\ de\ opciones\ y\ regresa\ la\ posici\u00F3n\ de\ la\ opci\u00F3n\ seleccionada.\r\n\ @param\ \ opciones\ \ \ \ Un\ arreglo\ con\ las\ opciones\ a\ seleccionar\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ String\ que\ indica\ la\ opci\u00F3n\ seleccionada\ -\ 1\ (de\ 0\ a\ length)\r\n
comment23.params=MIN\ MAX
comment23.target=int\ leerEnteroEnRango(int,\ int)
comment23.text=\r\n\ Lee\ un\ entero\ como\ int\ en\ un\ rango\ dado\ MIN-MAX\r\n\ @param\ \ MIN\ el\ valor\ entero\ m&iacute;nimo\ del\ rango\r\n\ @param\ \ MAX\ el\ valor\ entero\ m&acute;ximo\ del\ rango\r\n\ @return\ \ un\ valor\ entero\ (int)\ mayor\ o\ igual\ que\ MIN\ y\ menor\ o\ igual\ que\ MAX\ (MIN\ <\=\ numero\ <\=\ MAX\r\n
comment24.params=aviso\ MIN\ MAX
comment24.target=int\ leerEnteroEnRango(java.lang.String,\ int,\ int)
comment24.text=\r\n\ Sobrecarga\ leerEnteroEnRango\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @param\ \ MIN\ el\ valor\ entero\ m&iacute;nimo\ del\ rango\r\n\ @param\ \ MAX\ el\ valor\ entero\ m&acute;ximo\ del\ rango\r\n\ @return\ \ un\ valor\ entero\ (int)\ mayor\ o\ igual\ que\ MIN\ y\ menor\ o\ igual\ que\ MAX\ (MIN\ <\=\ numero\ <\=\ MAX\r\n
comment25.params=aviso
comment25.target=void\ imprimir(java.lang.String)
comment25.text=\r\n\ Imprime\ una\ cadena.\ Puede\ usar\ concatenacion\ con\ "+"\ para\ unir\ varios\ tipos\ de\ dato.\ Por\ ejemplo\:\r\n\ imprimir(1\ +\ "+"\ +\ "1"\ +\ "\="\ +\ 2)\r\n\ @param\ aviso\ el\ aviso\ a\ imprimir\r\n
comment26.params=caracter
comment26.target=void\ imprimir(char)
comment26.text=\r\n\ Imprime\ un\ char\r\n\ @param\ caracter\ el\ char\ a\ imprimir\r\n
comment27.params=numeroByte
comment27.target=void\ imprimir(byte)
comment27.text=\r\n\ Imprime\ un\ byte\r\n\ @param\ numeroByte\ el\ numero\ a\ imprimir\r\n
comment28.params=numeroShort
comment28.target=void\ imprimir(short)
comment28.text=\r\n\ Imprime\ un\ short\r\n\ @param\ numeroShort\ el\ numero\ a\ imprimir\r\n
comment29.params=numeroInt
comment29.target=void\ imprimir(int)
comment29.text=\r\n\ Imprime\ un\ int\r\n\ @param\ numeroInt\ el\ numero\ a\ imprimir\r\n
comment3.params=aviso
comment3.target=java.lang.String\ leerCadena(java.lang.String)
comment3.text=\r\n\ Sobrecarga\ leerCadena\ para\ imprimir\ un\ aviso.\r\n
comment30.params=numeroLong
comment30.target=void\ imprimir(long)
comment30.text=\r\n\ Imprime\ un\ long\r\n\ @param\ numeroLong\ el\ numero\ a\ imprimir\r\n
comment31.params=numeroFloat
comment31.target=void\ imprimir(float)
comment31.text=\r\n\ Imprime\ un\ float\ sin\ formato.\ Si\ desea\ dar\ formato\ use\ el\ m&eacute;todo\ sobrecargado.\r\n\ @param\ numeroFloat\ el\ numero\ a\ imprimir\r\n
comment32.params=numeroFloat\ decimalesPrecision
comment32.target=void\ imprimir(float,\ int)
comment32.text=\r\n\ Imprime\ un\ float\ con\ formato\ segun\ el\ valor\ de\ decimalesPrecision.\r\n\ @param\ numeroFloat\ el\ numero\ a\ imprimir\r\n\ @param\ decimalesPrecision\ la\ cantidad\ de\ decimales\ a\ imprimir\r\n
comment33.params=numeroDoble
comment33.target=void\ imprimir(double)
comment33.text=\r\n\ Imprime\ un\ double\ sin\ formato.\ Si\ desea\ dar\ formato\ use\ el\ m&eacute;todo\ sobrecargado.\r\n\ @param\ numeroDouble\ el\ numero\ a\ imprimir\r\n
comment34.params=numeroDouble\ decimalesPrecision
comment34.target=void\ imprimir(double,\ int)
comment34.text=\r\n\ Imprime\ un\ double\ con\ formato\ segun\ el\ valor\ de\ decimalesPrecision.\r\n\ @param\ numeroDouble\ el\ numero\ a\ imprimir\r\n\ @param\ decimalesPrecision\ la\ cantidad\ de\ decimales\ a\ imprimir\r\n
comment35.params=arreglo
comment35.target=void\ imprimir(char[])
comment35.text=\r\n\ Imprime\ un\ arreglo\ char.\ Cada\ letra\ se\ imprime\ separada\ por\ espacio\ en\ blanco\ y\ al\ final\ ENTER\r\n\ @param\ arreglo\ Un\ arreglo\ char\r\n
comment36.params=arreglo
comment36.target=void\ imprimir(int[])
comment36.text=\r\n\ Imprime\ un\ arreglo\ int.\ Cada\ numero\ se\ imprime\ separado\ por\ espacio\ en\ blanco\ y\ al\ final\ ENTER\r\n\ @param\ arreglo\ Un\ arreglo\ int\r\n
comment37.params=arreglo
comment37.target=void\ imprimir(float[])
comment37.text=\r\n\ Imprime\ un\ arreglo\ float.\ Cada\ numero\ se\ imprime\ separado\ por\ espacio\ en\ blanco\ y\ al\ final\ ENTER\r\n\ @param\ arreglo\ Un\ arreglo\ float\r\n
comment38.params=arreglo
comment38.target=void\ imprimir(double[])
comment38.text=\r\n\ Imprime\ un\ arreglo\ double.\ Cada\ numero\ se\ imprime\ separado\ por\ espacio\ en\ blanco\ y\ al\ final\ ENTER\r\n\ @param\ arreglo\ Un\ arreglo\ double\r\n
comment4.params=separador
comment4.target=java.lang.String\ leerCadena(char)
comment4.text=\r\n\ Lee\ una\ cadena\ de\ caracteres\ hasta\ encontrar\ un\ caracter\ separador.\ Cualquier\ cantidad\ de\ caracteres\ UNICODE.\r\n\ Usa\ como\ separador\ el\ caracter\ recibido\ como\ par&aacute;metro.\ Por\ ejemplo,\ para\ leer\ una\ hora\ en\ formato\r\n\ HH\:MM\:SS,\ puede\ invocar\ leerCadena('\:')\r\n\ @param\ \ separador\ El\ caracter\ ASCII/UNICODE\ que\ marca\ el\ fin\ de\ la\ cadena\r\n\ @return\ un\ String\r\n
comment5.params=aviso\ separador
comment5.target=java.lang.String\ leerCadena(java.lang.String,\ char)
comment5.text=\r\n\ Sobrecarga\ leerCadena(char)\ para\ imprimir\ un\ aviso.\r\n
comment6.params=
comment6.target=byte\ leerByte()
comment6.text=\r\n\ Lee\ un\ entero\ en\ el\ rango\ de\ los\ byte\ (-128\ a\ 127).\r\n\ @return\ un\ byte\r\n
comment7.params=aviso
comment7.target=byte\ leerByte(java.lang.String)
comment7.text=\r\n\ Sobrecarga\ leerByte()\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ byte\r\n
comment8.params=
comment8.target=short\ leerShort()
comment8.text=\r\n\ Lee\ un\ entero\ en\ el\ rango\ de\ los\ short\ (-32768\ a\ 32767).\r\n\ @return\ un\ short\r\n
comment9.params=aviso
comment9.target=short\ leerShort(java.lang.String)
comment9.text=\r\n\ Sobrecarga\ leerShort\ para\ imprimir\ un\ aviso.\r\n\ @param\ \ aviso\ \ \ Un\ aviso\ que\ indique\ al\ usuario\ el\ significado\ del\ valor\ a\ ingresar.\r\n\ @return\ un\ short\r\n
numComments=39
